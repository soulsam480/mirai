// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id Int @id @default(autoincrement())

  //auth
  email         String
  password      String
  emailVerified Boolean   @default(false)
  emailToken    String?
  otp           String?
  otpExpiry     DateTime?

  role    Role
  isOwner Boolean @default(false)

  owner       Institute @relation(fields: [instituteId], references: [id])
  instituteId Int       @unique

  tenant    Student @relation(fields: [studentId], references: [id])
  studentId Int     @unique

}

enum Role {
  STUDENT
  INSTITUTE
}

model Institute {
  id      Int              @id @default(autoincrement())
  code    String?
  name    String
  batches Batch[]
  status  OnboardingStatus
  logo    String?

  students Student[]
  Account  Account?
}

enum OnboardingStatus {
  ONBOARDED
  INPROGRESS
  PENDING
}

model Batch {
  id           Int               @id @default(autoincrement())
  institute    Institute         @relation(references: [id], fields: [instituteId])
  instituteId  Int
  duration     String
  durationType BatchDurationType
  status       BatchStatus
  name         String
  students     Student[]
}

enum BatchStatus {
  ACTIVE
  INACTIVE
}

enum BatchDurationType {
  YEAR
  MONTH
  WEEK
  DAY
}

//TODO: for future reference
// enum InstituteType{
//   ACADEMIC

// }

model Student {
  id   Int     @id @default(autoincrement())
  code String? @unique

  Batch   Batch? @relation(fields: [batchId], references: [id])
  batchId Int?

  Institute   Institute? @relation(fields: [instituteId], references: [id])
  instituteId Int?

  // basics
  name              String
  dob               String
  gender            String
  category          String
  mobile_number     String
  primary_email     String  @unique
  secondary_email   String? @unique
  permanent_address String
  current_address   String

  Account Account?
}

// model Course{

// }
