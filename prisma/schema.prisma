// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id   Int     @id @default(autoincrement())
  // for platform admins
  name String?

  //auth
  email         String
  password      String
  emailVerified Boolean   @default(false)
  emailToken    String?
  otp           String?
  otpExpiry     DateTime?

  role    Role
  isOwner Boolean @default(false)
  isAdmin Boolean @default(false)

  owner       Institute @relation(fields: [instituteId], references: [id], onDelete: Cascade)
  instituteId Int       @unique

  tenant    Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId Int     @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  INSTITUTE
  INSTITUTE_MOD
  ADMIN
}

model Institute {
  id     Int              @id @default(autoincrement())
  code   String?
  name   String
  status OnboardingStatus
  logo   String?

  batches     Batch[]
  departments Department[]
  courses     Course[]
  students    Student[]

  account Account?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OnboardingStatus {
  ONBOARDED
  INPROGRESS
  PENDING
}

model Batch {
  id Int @id @default(autoincrement())

  institute   Institute @relation(references: [id], onDelete: Cascade, fields: [instituteId])
  instituteId Int

  duration     String
  durationType BatchDurationType
  status       BatchStatus
  name         String
  students     Student[]
}

enum BatchStatus {
  ACTIVE
  INACTIVE
}

enum BatchDurationType {
  YEAR
  MONTH
  WEEK
  DAY
}

//TODO: for future reference
// enum InstituteType{
//   ACADEMIC

// }

//TODO: add more details to student model
model Student {
  id    Int     @id @default(autoincrement())
  code  String? @unique
  uniId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Batch   Batch? @relation(fields: [batchId], references: [id], onDelete: Cascade)
  batchId Int?

  institute   Institute? @relation(fields: [instituteId], references: [id], onDelete: Cascade)
  instituteId Int?

  Department   Department? @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  departmentId Int?

  course   Course? @relation(fields: [courseId], references: [id])
  courseId Int?

  // basics
  name             String
  dob              String
  gender           String
  category         String
  mobileNumber     String
  primaryEmail     String  @unique
  secondaryEmail   String? @unique
  permanentAddress Json    @default("{}")
  currentAddress   Json    @default("{}")

  account Account?
}

model Department {
  id       Int     @id @default(autoincrement())
  name     String
  inCharge String?

  institute   Institute? @relation(fields: [instituteId], references: [id], onDelete: Cascade)
  instituteId Int?

  students Student[]
  courses  Course[]
}

model Course {
  id Int @id @default(autoincrement())

  institute   Institute? @relation(fields: [instituteId], references: [id], onDelete: Cascade)
  instituteId Int

  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int

  students Student[]

  branchName String
  branchCode String
  scoreType  CourseScoreType

  programName         String
  programDurationType ProgramDurationType
  programDuration     Int
  programLevel        ProgramLevel

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CourseScoreType {
  CGPA
  PERCENTAGE
}

enum ProgramDurationType {
  SEMESTER
  YEAR
}

enum ProgramLevel {
  UG
  PG
  PHD
}
